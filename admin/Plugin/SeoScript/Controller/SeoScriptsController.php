<?phpclass SeoScriptsController extends SeoScriptAppController {    /**     * Controller name     *     * @var string     */    var $name = 'SeoScripts';    public $helpers = array('Html', 'Form', 'Session', 'Time', 'Text');    public $components = array('Auth', 'Session', 'Email', 'Cookie', 'Search.Prg', 'RequestHandler');    public $presetVars = array(array('field' => 'email', 'type' => 'value'), array('field' => 'firstname', 'type' => 'value'), array('field' => 'username', 'type' => 'value'), array('field' => 'mobile', 'type' => 'value'), array('field' => 'user_role_id', 'type' => 'value'), array('field' => 'status', 'type' => 'value'));    //public $presetVars = 	true;    public function beforeFilter() {        parent::beforeFilter();        $this->set('model', $this->modelClass);        $this->set('tab_open', 'seo_scripts');        $pos_list = array(            '1' => "Header",            '2' => "Footer",        );        $this->set('pos_list', $pos_list);    }    public function index() {        $conditions = array();        $conditions = array();        $limitValue = $limit = 25;        $page = ((isset($this->params->named['page']) && $this->params->named['page'] != "") ? $this->params->named['page'] : 0);        $this->set('limitValue', $limitValue);        $this->set('limit', $limit);        $this->set('page', $page);        if ($this->request->is('get') && !isset($this->request->data['recordsPerPage'])) {            if (!empty($this->request->query)) {                if (isset($this->request->query['position_type']) && $this->request->query['position_type'] != "") {                    array_push($conditions, array('SeoScript.position_type' => $this->request->query['position_type']));                    $this->set("position_type", $this->request->query['position_type']);                }                if (isset($this->request->query['is_active']) && $this->request->query['is_active'] != "") {                    array_push($conditions, array('SeoScript.is_active' => $this->request->query['is_active']));                    $this->set("is_active", $this->request->query['is_active']);                }                if (isset($this->request->query['script_title']) && $this->request->query['script_title'] != "") {                    array_push($conditions, array('SeoScript.script_title LIKE' => "%" . $this->request->query['script_title'] . "%"));                    $this->set("script_title", $this->request->query['script_title']);                }                if (@$this->request->query['from_date'] and @ $this->request->query['to_date']) {                    array_push($conditions, array('(DATE_FORMAT(SeoScript.created_on, "%Y-%m-%d") >= ? AND DATE_FORMAT(SeoScript.created_on, "%Y-%m-%d") <= ?)' => array($this->request->query['from_date'], $this->request->query['to_date'])));                } else                if (@$this->request->query['from_date']) {                    array_push($conditions, array('DATE_FORMAT(SeoScript.created_on, "%Y-%m-%d") >= ' => $this->request->query['from_date']));                } else                if (@$this->request->query['to_date']) {                    array_push($conditions, array('DATE_FORMAT(SeoScript.created_on, "%Y-%m-%d") <= ' => $this->request->query['to_date']));                }                $this->set("from_date", @$this->request->query['from_date']);                $this->set("to_date", @$this->request->query['to_date']);            }        }        $this->paginate = array(            'conditions' => $conditions,            'limit' => 25,            'order' => array(                'SeoScript.created_on' => 'DESC'            )        );        $this->set('records', $this->paginate('SeoScript'));        $this->set('title_for_layout', 'SEO Scripts');    }///$this->{$this->modelClass}->set($data_chk);    public function add() {        if ($this->request->is('post')) {            $this->request->data['SeoScript']['created_on'] = date("Y-m-d H:i:s");            $this->request->data['SeoScript']['is_active'] = 1;            if ($this->SeoScript->save($this->request->data)) {                $new_id = $this->{$this->modelClass}->id;                $json_data = json_encode($this->request->data);                $text_action = "Added";                $this->global_logs("seo_scripts", $new_id, 0, $text_action, $json_data);                $this->Session->setFlash(__('SeoScript added successfully'), 'success');                $this->redirect(array('plugin' => 'seo_script', 'controller' => 'seo_scripts', 'action' => 'index'));            }        }        $this->set('title_for_layout', 'Add New SEO Script');    }    public function edit() {        $user_id = $this->params->query['id'];        $conditions = array(            "SeoScript.id" => $user_id,        );        if (!$user_id || $user_id == NULL) {            $this->Session->setFlash('Invalid request to edit SeoScript', 'error');            $this->redirect(array('plugin' => 'seo_script', 'controller' => 'seo_scripts', 'action' => 'index'));        } else {// check that user exists or not            $check_user_exists = $this->SeoScript->Find('count', array('conditions' => $conditions, 'recursive' => -1));            if ($check_user_exists == 0) {                $this->Session->setFlash('SeoScript does not exists', 'error');                $this->redirect(array('plugin' => 'seo_script', 'controller' => 'seo_scripts', 'action' => 'index'));            }        }        $users_data = $this->SeoScript->find('first', array('conditions' => $conditions));        $this->set('users_data', $users_data);        if ($this->request->is('post') || $this->request->is('put')) {            if ($this->SeoScript->save($this->request->data)) {                $json_data = json_encode($this->request->data);                $text_action = "updated";                $this->global_logs("seo_scripts", $user_id, 1, $text_action, $json_data);                $this->Session->setFlash(__('SEO Script updated successfully'), 'success');                $this->redirect(array('plugin' => 'seo_script', 'controller' => 'seo_scripts', 'action' => 'index'));            } else {                $this->Session->setFlash('SeoScript couldn\'t be updated, try again later', 'error');            }        } else {            $this->data = $users_data;        }        $this->set('title_for_layout', 'Update SEO Script');    }    public function status_ajax() {        if ($this->request->is('Ajax')) {            if ($this->data['id'] != null) {                $all_data = $this->{$this->modelClass}->findById($this->data['id']);                if ($all_data[$this->modelClass]['is_active'] == 1) {                    $new_value = 0;                    $data['is_active'] = 0;                    $status = 3;                    $text_action = " inactivated";                } else {                    $new_value = 1;                    $data['is_active'] = 1;                    $status = 2;                    $text_action = " activated";                }                $this->{$this->modelClass}->id = $this->data['id'];                $this->{$this->modelClass}->save($data, false);                $json_data = json_encode($data);                $this->global_logs("seo_scripts", $this->data['id'], $status, $text_action, $json_data);                echo 1;            }        }        exit;    }}