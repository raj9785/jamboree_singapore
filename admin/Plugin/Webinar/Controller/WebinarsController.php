<?phpclass WebinarsController extends WebinarAppController {    /**     * Controller name     *     * @var string     */    var $name = 'Webinars';    public $helpers = array('Html', 'Form', 'Session', 'Time', 'Text');    public $components = array('Auth', 'Session', 'Email', 'Cookie', 'Search.Prg', 'RequestHandler');    public $presetVars = array(array('field' => 'email', 'type' => 'value'), array('field' => 'firstname', 'type' => 'value'), array('field' => 'username', 'type' => 'value'), array('field' => 'mobile', 'type' => 'value'), array('field' => 'user_role_id', 'type' => 'value'), array('field' => 'status', 'type' => 'value'));    //public $presetVars = 	true;    public function beforeFilter() {        parent::beforeFilter();        $this->set('model', $this->modelClass);        $this->set('tab_open', 'webinars');    }    public function edit($user_id) {        $conditions = array(            "Webinar.id" => $user_id,        );        if (!$user_id || $user_id == NULL) {            $this->Session->setFlash('Invalid request to edit Webinar', 'error');            $this->redirect(array('plugin' => false, 'controller' => 'users', 'action' => 'dashboard'));        } else {// check that user exists or not            $check_user_exists = $this->Webinar->Find('count', array('conditions' => $conditions, 'recursive' => -1));            if ($check_user_exists == 0) {                $this->Session->setFlash('Webinar does not exists', 'error');                $this->redirect(array('plugin' => false, 'controller' => 'users', 'action' => 'dashboard'));            }        }        $users_data = $this->Webinar->find('first', array('conditions' => $conditions));        $this->set('users_data', $users_data);        if ($this->request->is('post') || $this->request->is('put')) {            if ($this->Webinar->save($this->request->data)) {                $json_data = json_encode($this->request->data);                $text_action = "updated";                $this->global_logs("webinars", $user_id, 1, $text_action, $json_data);                $this->Session->setFlash(__('Webinar updated successfully'), 'success');                $this->redirect(array('plugin' => 'webinar', 'controller' => 'webinars', 'action' => 'edit',$user_id));            } else {                $this->Session->setFlash('Webinar couldn\'t be updated, try again later', 'error');            }        } else {            $this->data = $users_data;        }        $this->set('title_for_layout', 'Update Webinar Iframe URL');    }}