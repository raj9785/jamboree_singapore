<?phpclass ResumesController extends ResumeAppController {    /**     * Controller name     *     * @var string     */    var $name = 'Resumes';    public $helpers = array('Html', 'Form', 'Session', 'Time', 'Text');    public $components = array('Auth', 'Session', 'Email', 'Cookie', 'Search.Prg', 'RequestHandler');    public $presetVars = array(array('field' => 'email', 'type' => 'value'), array('field' => 'firstname', 'type' => 'value'), array('field' => 'username', 'type' => 'value'), array('field' => 'mobile', 'type' => 'value'), array('field' => 'user_role_id', 'type' => 'value'), array('field' => 'status', 'type' => 'value'));    //public $presetVars = 	true;    public function beforeFilter() {        parent::beforeFilter();        $this->set('model', $this->modelClass);        $this->set('tab_open', 'careers');        $this->loadModel("CareerCategory");        $cat_list = $this->CareerCategory->find("list", array(            'conditions' => array(                'is_active' => 1            ), 'order' => array("name" => "ASC"),                )        );        $this->set("cat_list", $cat_list);    }    public function index() {        $conditions = array();        $conditions = array();        $limitValue = $limit = 25;        $page = ((isset($this->params->named['page']) && $this->params->named['page'] != "") ? $this->params->named['page'] : 0);        $this->set('limitValue', $limitValue);        $this->set('limit', $limit);        $this->set('page', $page);        if ($this->request->is('get') && !isset($this->request->data['recordsPerPage'])) {            if (!empty($this->request->query)) {                if (isset($this->request->query['career_category_id']) && $this->request->query['career_category_id'] != "") {                    array_push($conditions, array('Resume.career_category_id' => $this->request->query['career_category_id']));                    $this->set("career_category_id", $this->request->query['career_category_id']);                }                if (isset($this->request->query['name']) && $this->request->query['name'] != "") {                    array_push($conditions, array('Resume.name LIKE' => "%" . $this->request->query['name'] . "%"));                    $this->set("name", $this->request->query['name']);                }                if (@$this->request->query['from_date'] and @ $this->request->query['to_date']) {                    array_push($conditions, array('(DATE_FORMAT(Resume.created_on, "%Y-%m-%d") >= ? AND DATE_FORMAT(Resume.created_on, "%Y-%m-%d") <= ?)' => array($this->request->query['from_date'], $this->request->query['to_date'])));                } else                if (@$this->request->query['from_date']) {                    array_push($conditions, array('DATE_FORMAT(Resume.created_on, "%Y-%m-%d") >= ' => $this->request->query['from_date']));                } else                if (@$this->request->query['to_date']) {                    array_push($conditions, array('DATE_FORMAT(Resume.created_on, "%Y-%m-%d") <= ' => $this->request->query['to_date']));                }                $this->set("from_date", @$this->request->query['from_date']);                $this->set("to_date", @$this->request->query['to_date']);            }        }        $this->paginate = array(            'conditions' => $conditions,            'limit' => 25,            'order' => array(                'Resume.created_on' => 'DESC'            )        );        $this->set('records', $this->paginate('Resume'));        $this->set('title_for_layout', 'Resume List');    }    function download_resume($filename) {        $this->download($filename, 'docs');    }}